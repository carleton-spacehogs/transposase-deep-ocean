ylab("%-transposase ORF") +
geom_jitter(aes(color = class_trans), alpha = 0.5, height = 0.05) +
scale_color_manual(labels = c("High %-transposase", "Normal %-transposase", "Low %-transposase"),
values = c('orange','gray', "green"))+
theme_classic() +
theme(legend.position = "none")
scale <- c(0.05, 0.15, 0.25, 0.35)
filter_outliers(all_p, "percent_trans") %>%
ggplot(aes(y = percent_trans, x = median_bin_pnps)) +
facet_wrap(~depth, ncol = 4) +
scale_y_continuous(breaks = scale) +
xlab("Median MAG pN/pS") +
ylab("%-transposase ORF") +
geom_jitter(aes(color = class_trans), alpha = 0.5, height = 0.05) +
scale_color_manual(labels = c("High %-transposase", "Normal %-transposase", "Low %-transposase"),
values = c('orange','gray', "green"))+
theme_classic() +
theme(legend.position = "none")
scale <- c(0.05, 0.15, 0.25, 0.35)
log_scale <- c("0.05", "0.15", "0.25", "0.35")
p3 <- filter_outliers(all_p, "percent_trans") %>%
ggplot(aes(y = percent_trans, x = median_bin_pnps)) +
facet_wrap(~depth, ncol = 4) +
scale_y_continuous(breaks = scale, labels = log_scale) +
xlab("Median MAG pN/pS") +
ylab("%-transposase ORF") +
geom_jitter(aes(color = class_trans), alpha = 0.5, height = 0.05) +
scale_color_manual(labels = c("High %-transposase", "Normal %-transposase", "Low %-transposase"),
values = c('orange','gray', "green"))+
theme_classic() +
theme(legend.position = "none")
filter_outliers(all_p, "percent_trans") %>%
ggplot(aes(y = percent_trans, x = median_bin_pnps)) +
facet_wrap(~depth, ncol = 4) +
scale_y_continuous(breaks = scale, labels = log_scale) +
xlab("Median MAG pN/pS") +
ylab("%-transposase ORF") +
geom_jitter(aes(color = class_trans), alpha = 0.5, height = 0.05) +
scale_color_manual(labels = c("High %-transposase", "Normal %-transposase", "Low %-transposase"),
values = c('orange','gray', "green"))+
theme_classic() +
theme(legend.position = "none")
filter_outliers(all_p, "percent_trans") %>%
ggplot(aes(y = percent_trans, x = median_bin_pnps)) +
facet_wrap(~depth, ncol = 4) +
scale_x_continuous(breaks = scale, labels = log_scale) +
xlab("Median MAG pN/pS") +
ylab("%-transposase ORF") +
geom_jitter(aes(color = class_trans), alpha = 0.5, height = 0.05) +
scale_color_manual(labels = c("High %-transposase", "Normal %-transposase", "Low %-transposase"),
values = c('orange','gray', "green"))+
theme_classic() +
theme(legend.position = "none")
filter_outliers(all_p, "percent_trans") %>%
ggplot(aes(y = percent_trans, x = median_bin_pnps)) +
facet_wrap(~depth, ncol = 4) +
scale_x_continuous(breaks = scale) +
xlab("Median MAG pN/pS") +
ylab("%-transposase ORF") +
geom_jitter(aes(color = class_trans), alpha = 0.5, height = 0.05) +
scale_color_manual(labels = c("High %-transposase", "Normal %-transposase", "Low %-transposase"),
values = c('orange','gray', "green"))+
theme_classic() +
theme(legend.position = "none")
# log_scale <- c("0.05", "0.15", "0.25", "0.35")
p3 <- filter_outliers(all_p, "percent_trans") %>%
ggplot(aes(y = percent_trans, x = median_bin_pnps)) +
facet_wrap(~depth, ncol = 4) +
scale_x_continuous(breaks = scale) +
xlab("Median MAG pN/pS") +
ylab("%-transposase ORF") +
geom_jitter(aes(color = class_trans), alpha = 0.5, height = 0.05) +
scale_color_manual(labels = c("High %-transposase", "Normal %-transposase", "Low %-transposase"),
values = c('orange','gray', "green"))+
theme_classic() +
theme(legend.position = "none")
ggarrange(p1,p2,p3,
nrow = 3,
heights = c(3/5,2/5,3/5),
labels = c("A", "B", "C"))
less_taxa
# filter_outliers(all, "complete genome size (Mbp)")
p2<-all %>%
mutate(depth = fct_rev(g_depth)) %>%
ggplot(aes(x = depth, y = `complete genome size (Mbp)`)) +
ylim(0,9) +
stat_compare_means(comparisons = list(c("DCM","MES"), c("SRF","MES")),
label = "p.signif", hide.ns = TRUE, method = "t.test",
tip.length = 0.01, label.y = c(8,9)) +
scale_color_manual(labels = c("High %-transposase (\u0251- \u03b2- \u03b3- proteobact.,\n and Actinobacteria)\n",
"Normal transposase abundance\n",
"Low %-transposase (Flavobact., Acidimicro.,\n\u03b3- timonadetes,Marinisomatia)"),
values = c('orange','gray', "green"))+
labs(color='Taxonomical Class of:') +
geom_jitter(aes(color = class_trans), alpha = 0.5) +
geom_boxplot(outlier.shape = NA, alpha = 0.1) +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.2)) +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank())
ggarrange(p1,p2,p3,
nrow = 3,
heights = c(3/5,2/5,3/5),
labels = c("A", "B", "C"))
# filter_outliers(all, "complete genome size (Mbp)")
p2<-all %>%
mutate(depth = fct_rev(g_depth)) %>%
ggplot(aes(x = depth, y = `complete genome size (Mbp)`)) +
ylim(0,9) +
stat_compare_means(comparisons = list(c("DCM","MES"), c("SRF","MES")),
label = "p.signif", hide.ns = TRUE, method = "t.test",
tip.length = 0.01, label.y = c(8,9)) +
scale_color_manual(labels = c("High %-transposase (\u0251- \u03b2- \u03b3- proteobact.,\n and Actinobacteria)\n",
"Normal transposase abundance\n",
"Low %-transposase (Flavobact., Acidimicro.,\n\u03b3- timonadetes, and Marinisomatia)"),
values = c('orange','gray', "green"))+
labs(color='Taxonomical Class of:') +
geom_jitter(aes(color = class_trans), alpha = 0.5) +
geom_boxplot(outlier.shape = NA, alpha = 0.1) +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.2)) +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank())
ggarrange(p1,p2,p3,
nrow = 3,
heights = c(3/5,2/5,3/5),
labels = c("A", "B", "C"))
# filter_outliers(all, "complete genome size (Mbp)")
p2<-all %>%
mutate(depth = fct_rev(g_depth)) %>%
ggplot(aes(x = depth, y = `complete genome size (Mbp)`)) +
ylim(0,9) +
stat_compare_means(comparisons = list(c("DCM","MES"), c("SRF","MES")),
label = "p.signif", hide.ns = TRUE, method = "t.test",
tip.length = 0.01, label.y = c(8,9)) +
scale_color_manual(labels = c("High %-transposase (\u0251- \u03b2- \u03b3- proteobact.,\n and Actinobacteria)\n",
"Normal transposase abundance\n",
"Low %-transposase (Flavobact., Acidimicro.,\n\u03b3- timonadetes, and Marinisomatia)"),
values = c('orange','gray', "green"))+
labs(color='Taxonomical Class of:') +
geom_jitter(aes(color = class_trans), alpha = 0.5) +
geom_boxplot(outlier.shape = NA, alpha = 0.1) +
ylab("complete genome size (Mbp) of MAGs") +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.2)) +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank())
ggarrange(p1,p2,p3,
nrow = 3,
heights = c(3/5,2/5,3/5),
labels = c("A", "B", "C"))
# filter_outliers(all, "complete genome size (Mbp)")
p2<-all %>%
mutate(depth = fct_rev(g_depth)) %>%
ggplot(aes(x = depth, y = `complete genome size (Mbp)`)) +
ylim(0,9) +
stat_compare_means(comparisons = list(c("DCM","MES"), c("SRF","MES")),
label = "p.signif", hide.ns = TRUE, method = "t.test",
tip.length = 0.01, label.y = c(8,9)) +
scale_color_manual(labels = c("High %-transposase (\u0251- \u03b2- \u03b3- proteobact.,\n and Actinobacteria)\n",
"Normal transposase abundance\n",
"Low %-transposase (Flavobact., Acidimicro.,\n\u03b3- timonadetes, and Marinisomatia)"),
values = c('orange','gray', "green"))+
labs(color='Taxonomical Class of:') +
geom_jitter(aes(color = class_trans), alpha = 0.5) +
geom_boxplot(outlier.shape = NA, alpha = 0.1) +
ylab("complete genome size (Mbp) of MAGs") +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.3)) +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank())
ggarrange(p1,p2,p3,
nrow = 3,
heights = c(3/5,2/5,3/5),
labels = c("A", "B", "C"))
# filter_outliers(all, "complete genome size (Mbp)")
p2<-all %>%
mutate(depth = fct_rev(g_depth)) %>%
ggplot(aes(x = depth, y = `complete genome size (Mbp)`)) +
ylim(0,9) +
stat_compare_means(comparisons = list(c("DCM","MES"), c("SRF","MES")),
label = "p.signif", hide.ns = TRUE, method = "t.test",
tip.length = 0.01, label.y = c(8,9)) +
scale_color_manual(labels = c("High %-transposase (\u0251- \u03b2- \u03b3- proteobact.,\n and Actinobacteria)\n",
"Normal transposase abundance\n",
"Low %-transposase (Flavobact., Acidimicro.,\n\u03b3- timonadetes, and Marinisomatia)"),
values = c('orange','gray', "green"))+
labs(color='Taxonomical Class of:') +
geom_jitter(aes(color = class_trans), alpha = 0.5) +
geom_boxplot(outlier.shape = NA, alpha = 0.1) +
ylab("complete genome size (Mbp) of MAGs") +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.5)) +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank())
ggarrange(p1,p2,p3,
nrow = 3,
heights = c(3/5,2/5,3/5),
labels = c("A", "B", "C"))
ggsave("trans_genome_size.png", plot = last_plot())
ggsave("trans_genome_size.png", plot = last_plot())
# filter_outliers(all, "complete genome size (Mbp)")
p2<-all %>%
mutate(depth = fct_rev(g_depth)) %>%
ggplot(aes(x = depth, y = `complete genome size (Mbp)`)) +
ylim(0,9) +
stat_compare_means(comparisons = list(c("DCM","MES"), c("SRF","MES")),
label = "p.signif", hide.ns = TRUE, method = "t.test",
tip.length = 0.01, label.y = c(8,9)) +
scale_color_manual(labels = c("High %-transposase (\u0251- \u03b2- \u03b3- proteobact.,\n and Actinobacteria)\n",
"Normal transposase abundance\n",
"Low %-transposase (Flavobact., Acidimicro.,\n\u03b3- timonadetes, and Marinisomatia)"),
values = c('orange','gray', "green"))+
labs(color='Taxonomical Class of:') +
geom_jitter(aes(color = class_trans), alpha = 0.5) +
geom_boxplot(outlier.shape = NA, alpha = 0.1) +
ylab("complete genome size (Mbp) of MAGs") +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.4)) +
coord_flip() +
theme_classic() +
theme(axis.title.y=element_blank())
ggarrange(p1,p2,p3,
nrow = 3,
heights = c(3/5,2/5,3/5),
labels = c("A", "B", "C"))
ggsave("trans_genome_size.png", plot = last_plot())
old.lm <- lm(log_percent_trans~depth*Class +log_percent_biofilm
+`complete genome size (Mbp)` + I(`complete genome size (Mbp)`^2), all_p)
pnps.lm <- update(old.lm, .~. +median_bin_pnps)
anova(pnps.lm)
depth.lm <- lm(log_percent_trans~depth, all_p)
pnps2.lm <- update(depth.lm, .~. +median_bin_pnps)
anova(pnps2.lm)
nrow(all)
summary(lm(log_percent_trans~median_bin_pnps, all_p))
low_trans
hight_trans
high_trans
less_taxa
more_taxa <- c()
less_taxa <- c()
for (taxa in big_taxa){
this_taxa <- bi_var %>% filter(`Class with more than 10 MAGs`==taxa)
others <- bi_var %>% filter(`Class with more than 10 MAGs`!=taxa)
res <- t.test(this_taxa$percent_trans, others$percent_trans)
if (res$p.value < 0.01){
if (res$estimate[1] < res$estimate[2]){
less_taxa <- c(less_taxa, taxa)
print(paste(taxa, "->", "less transposases than the rest"))
} else {
more_taxa <- c(more_taxa, taxa)
print(paste(taxa, "->", "more transposases than the rest"))
}
}
}
less_taxa
more_taxa
more_taxa <- c()
less_taxa <- c()
for (taxa in big_taxa){
this_taxa <- bi_var %>% filter(`Class with more than 10 MAGs`==taxa)
others <- bi_var %>% filter(`Class with more than 10 MAGs`!=taxa)
res <- t.test(this_taxa$percent_trans, others$percent_trans)
if (res$p.value < 0.05){
if (res$estimate[1] < res$estimate[2]){
less_taxa <- c(less_taxa, taxa)
print(paste(taxa, "->", "less transposases than the rest"))
} else {
more_taxa <- c(more_taxa, taxa)
print(paste(taxa, "->", "more transposases than the rest"))
}
}
}
more_taxa
depth_stats_taxon <- all %>%
with(table(`Class with more than 10 MAGs`, depth)) %>%
as.data.frame.matrix() %>%
rownames_to_column(var = "Class with more than 10 MAGs")
all_tara <- bin_taxon %>%
select("complete genome size (Mbp)", "percent_trans", "log_percent_trans", "class_trans",
"depth", "Class", "is_MES", "is_biofilm", "percent_biofilm", "log_percent_biofilm",
"Class with more than 10 MAGs") %>%
filter(!is.na(depth))
all_mala <- malaspina_bins %>%
select(c("complete genome size (Mbp)", "percent_trans", "log_percent_trans", "class_trans",
"depth", "Class", "is_MES", "is_biofilm","percent_biofilm", "log_percent_biofilm",
"Class with more than 10 MAGs"))
#all  <- filter_outliers(rbind(all_tara, all_mala),"percent_trans")
all <- rbind(all_tara, all_mala)
depth_stats_taxon <- all %>%
with(table(`Class with more than 10 MAGs`, depth)) %>%
as.data.frame.matrix() %>%
rownames_to_column(var = "Class with more than 10 MAGs")
depth_stats_taxon
write.csv(depth_stats_taxon,"taxon_depth_summary.csv", row.names = FALSE)
MES <- all %>% filter(depth == "MES")
Mala <- all %>% filter(depth == "Mala")
t.test(MES$log_percent_trans, Mala$log_percent_trans)
MES <- all %>% filter(depth == "MES")
unique(all$depth)
Mala <- all %>% filter(depth == "Deep Malaspina")
t.test(MES$log_percent_trans, Mala$log_percent_trans)
t.test(MES$percent_trans, Mala$percent_trans)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path ))
source("./init_share.R")
g(bin_taxon, depth_comparison, malaspina_bins) %=% init_bins()
all_tara <- bin_taxon %>%
select("complete genome size (Mbp)", "percent_trans", "log_percent_trans", "class_trans",
"depth", "Class", "is_MES", "is_biofilm", "percent_biofilm", "log_percent_biofilm",
"Class with more than 10 MAGs") %>%
filter(!is.na(depth))
all_mala <- malaspina_bins %>%
select(c("complete genome size (Mbp)", "percent_trans", "log_percent_trans", "class_trans",
"depth", "Class", "is_MES", "is_biofilm","percent_biofilm", "log_percent_biofilm",
"Class with more than 10 MAGs"))
all  <- filter_outliers(rbind(all_tara, all_mala),"percent_trans")
t.test(MES$percent_trans, Mala$percent_trans)
big_taxa
# graph_taxon <- c("Acidimicrobidae", "Deltaproteobacteria", "Gammaproteobacteria")
graph_taxon <- c("Acidimicrobidae", "Verrucomicrobia", "Gammaproteobacteria")
x_tax <- bin_taxon[,c("Class", "biofilm_count", "log_percent_trans",
"depth", "percent_trans", "is_biofilm")] %>%
filter(Class %in% graph_taxon) %>% filter(!is.na(depth))
y_tax <- malaspina_bins[,c("Class", "biofilm_count", "log_percent_trans",
"depth", "percent_trans", "is_biofilm")]%>%
filter(Class %in% graph_taxon)
g_tax <- filter_outliers(rbind(x_tax, y_tax), "percent_trans")
# g_tax <- rbind(x_tax, y_tax)
# g_tax <- filter_outliers(x_tax, "percent_trans")
g_tax$Class <- factor(g_tax$Class, levels = graph_taxon)
g_tax$g_depth <- gsub('Deep Malaspina', 'Deep\nMalaspina', g_tax$depth)
g_tax$g_depth <- factor(g_tax$g_depth, levels = c("SRF", "DCM", "MES", 'Deep\nMalaspina'))
g_tax$is_biofilm <- gsub('absent', 'Biofilm\nabsent', g_tax$is_biofilm)
g_tax$is_biofilm <- gsub('present', 'Biofilm\n     present', g_tax$is_biofilm)
p_depth <- g_tax %>%
ggplot(aes(x=percent_trans, y = fct_rev(g_depth))) +
facet_wrap(~Class, ncol = 4) +
geom_boxplot(outlier.alpha = 0.3) +
ylab("depth")+
stat_summary(fun.data = boxplot.give.n, geom = "text",
position=position_nudge(x = 0.1, y = 0)) +
theme_classic() +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
p_biofilm <- g_tax %>%
ggplot(aes(y = percent_trans, x = fct_rev(is_biofilm))) +
facet_wrap(~Class, ncol = 4) +
geom_boxplot(outlier.alpha = 0.3) +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.1)) +
ylab("% of transposase ORFs in MAG") +
# xlab("biofilm ORF")+
coord_flip() +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.title.y=element_blank())
ggarrange(p_depth, p_biofilm, ncol = 1,
nrow = 2, labels = c("A", "B"),
heights = c(4/7,3/7))
graph_taxon <- c("Acidimicrobidae", "Deltaproteobacteria", "Gammaproteobacteria")
x_tax <- bin_taxon[,c("Class", "biofilm_count", "log_percent_trans",
"depth", "percent_trans", "is_biofilm")] %>%
filter(Class %in% graph_taxon) %>% filter(!is.na(depth))
y_tax <- malaspina_bins[,c("Class", "biofilm_count", "log_percent_trans",
"depth", "percent_trans", "is_biofilm")]%>%
filter(Class %in% graph_taxon)
g_tax <- filter_outliers(rbind(x_tax, y_tax), "percent_trans")
# g_tax <- rbind(x_tax, y_tax)
# g_tax <- filter_outliers(x_tax, "percent_trans")
g_tax$Class <- factor(g_tax$Class, levels = graph_taxon)
g_tax$g_depth <- gsub('Deep Malaspina', 'Deep\nMalaspina', g_tax$depth)
g_tax$g_depth <- factor(g_tax$g_depth, levels = c("SRF", "DCM", "MES", 'Deep\nMalaspina'))
g_tax$is_biofilm <- gsub('absent', 'Biofilm\nabsent', g_tax$is_biofilm)
g_tax$is_biofilm <- gsub('present', 'Biofilm\n     present', g_tax$is_biofilm)
p_depth <- g_tax %>%
ggplot(aes(x=percent_trans, y = fct_rev(g_depth))) +
facet_wrap(~Class, ncol = 4) +
geom_boxplot(outlier.alpha = 0.3) +
ylab("depth")+
stat_summary(fun.data = boxplot.give.n, geom = "text",
position=position_nudge(x = 0.1, y = 0)) +
theme_classic() +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
p_biofilm <- g_tax %>%
ggplot(aes(y = percent_trans, x = fct_rev(is_biofilm))) +
facet_wrap(~Class, ncol = 4) +
geom_boxplot(outlier.alpha = 0.3) +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.1)) +
ylab("% of transposase ORFs in MAG") +
# xlab("biofilm ORF")+
coord_flip() +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.title.y=element_blank())
ggarrange(p_depth, p_biofilm, ncol = 1,
nrow = 2, labels = c("A", "B"),
heights = c(4/7,3/7))
big_taxa
setdiff(less_taxa, big_taxa)
less_taxa
setdiff(big_taxa, less_taxa)
setdiff(setdiff(big_taxa, less_taxa), more_taxa)
# from bin_taxon_genomesize_statistics.R
normal_taxa <- setdiff(setdiff(big_taxa, less_taxa), more_taxa)
# from bin_taxon_genomesize_statistics.R
normal_taxa <- setdiff(setdiff(big_taxa, less_taxa), more_taxa)
normal_taxa_rows <- g_tax %>% filter(Class%in%normal_taxa)
as.data.frame(table(normal_taxa_rows[, "Class"]))
setdiff(setdiff(big_taxa, less_taxa), more_taxa)
# from bin_taxon_genomesize_statistics.R
normal_taxa <- setdiff(setdiff(big_taxa, less_taxa), more_taxa)
normal_taxa_rows <- rbind(bin_taxon[, "Class"], malaspina_bins[, "Class"])
normal_taxa_rows <- rbind(bin_taxon%>%select("Class"), malaspina_bins%>%select("Class"))
filter(normal_taxa_rows, Class %in% normal_taxa)
as.data.frame(table(normal_taxa_rows[, "Class"]))
# from bin_taxon_genomesize_statistics.R
normal_taxa <- setdiff(setdiff(big_taxa, less_taxa), more_taxa)
normal_taxa_rows <- rbind(bin_taxon%>%select("Class"), malaspina_bins%>%select("Class")) %>%
filter(Class %in% normal_taxa)
as.data.frame(table(normal_taxa_rows[, "Class"]))
graph_taxon <- c("Acidimicrobidae", "Deltaproteobacteria", "Gammaproteobacteria")
# graph_taxon <- c("Acidimicrobidae", "Verrucomicrobia", "Gammaproteobacteria")
graph_taxon <- c("Acidimicrobidae", "Dehalococcoidia", "Gammaproteobacteria")
x_tax <- bin_taxon[,c("Class", "biofilm_count", "log_percent_trans",
"depth", "percent_trans", "is_biofilm")] %>%
filter(Class %in% graph_taxon) %>% filter(!is.na(depth))
y_tax <- malaspina_bins[,c("Class", "biofilm_count", "log_percent_trans",
"depth", "percent_trans", "is_biofilm")]%>%
filter(Class %in% graph_taxon)
g_tax <- filter_outliers(rbind(x_tax, y_tax), "percent_trans")
# g_tax <- rbind(x_tax, y_tax)
# g_tax <- filter_outliers(x_tax, "percent_trans")
g_tax$Class <- factor(g_tax$Class, levels = graph_taxon)
g_tax$g_depth <- gsub('Deep Malaspina', 'Deep\nMalaspina', g_tax$depth)
g_tax$g_depth <- factor(g_tax$g_depth, levels = c("SRF", "DCM", "MES", 'Deep\nMalaspina'))
g_tax$is_biofilm <- gsub('absent', 'Biofilm\nabsent', g_tax$is_biofilm)
g_tax$is_biofilm <- gsub('present', 'Biofilm\n     present', g_tax$is_biofilm)
p_depth <- g_tax %>%
ggplot(aes(x=percent_trans, y = fct_rev(g_depth))) +
facet_wrap(~Class, ncol = 4) +
geom_boxplot(outlier.alpha = 0.3) +
ylab("depth")+
stat_summary(fun.data = boxplot.give.n, geom = "text",
position=position_nudge(x = 0.1, y = 0)) +
theme_classic() +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
p_biofilm <- g_tax %>%
ggplot(aes(y = percent_trans, x = fct_rev(is_biofilm))) +
facet_wrap(~Class, ncol = 4) +
geom_boxplot(outlier.alpha = 0.3) +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.1)) +
ylab("% of transposase ORFs in MAG") +
# xlab("biofilm ORF")+
coord_flip() +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.title.y=element_blank())
ggarrange(p_depth, p_biofilm, ncol = 1,
nrow = 2, labels = c("A", "B"),
heights = c(4/7,3/7))
ggsave("some_taxa_trans.png", plot = last_plot())
normal_taxa <- setdiff(setdiff(big_taxa, less_taxa), more_taxa)
normal_taxa_rows <- rbind(bin_taxon%>%select("Class"), malaspina_bins%>%select("Class")) %>%
filter(Class %in% normal_taxa)
as.data.frame(table(normal_taxa_rows[, "Class"]))
# graph_taxon <- c("Acidimicrobidae", "Deltaproteobacteria", "Gammaproteobacteria")
graph_taxon <- c("Acidimicrobidae", "Verrucomicrobia", "Gammaproteobacteria")
x_tax <- bin_taxon[,c("Class", "biofilm_count", "log_percent_trans",
"depth", "percent_trans", "is_biofilm")] %>%
filter(Class %in% graph_taxon) %>% filter(!is.na(depth))
y_tax <- malaspina_bins[,c("Class", "biofilm_count", "log_percent_trans",
"depth", "percent_trans", "is_biofilm")]%>%
filter(Class %in% graph_taxon)
g_tax <- filter_outliers(rbind(x_tax, y_tax), "percent_trans")
# g_tax <- rbind(x_tax, y_tax)
# g_tax <- filter_outliers(x_tax, "percent_trans")
g_tax$Class <- factor(g_tax$Class, levels = graph_taxon)
g_tax$g_depth <- gsub('Deep Malaspina', 'Deep\nMalaspina', g_tax$depth)
g_tax$g_depth <- factor(g_tax$g_depth, levels = c("SRF", "DCM", "MES", 'Deep\nMalaspina'))
g_tax$is_biofilm <- gsub('absent', 'Biofilm\nabsent', g_tax$is_biofilm)
g_tax$is_biofilm <- gsub('present', 'Biofilm\n     present', g_tax$is_biofilm)
p_depth <- g_tax %>%
ggplot(aes(x=percent_trans, y = fct_rev(g_depth))) +
facet_wrap(~Class, ncol = 4) +
geom_boxplot(outlier.alpha = 0.3) +
ylab("depth")+
stat_summary(fun.data = boxplot.give.n, geom = "text",
position=position_nudge(x = 0.1, y = 0)) +
theme_classic() +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.x=element_blank())
p_biofilm <- g_tax %>%
ggplot(aes(y = percent_trans, x = fct_rev(is_biofilm))) +
facet_wrap(~Class, ncol = 4) +
geom_boxplot(outlier.alpha = 0.3) +
stat_summary(fun.data = boxplot.give.n, geom = "text", position=position_nudge(x = 0, y = 0.1)) +
ylab("% of transposase ORFs in MAG") +
# xlab("biofilm ORF")+
coord_flip() +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.title.y=element_blank())
ggarrange(p_depth, p_biofilm, ncol = 1,
nrow = 2, labels = c("A", "B"),
heights = c(4/7,3/7))
ggsave("some_taxa_trans.png", plot = last_plot())
ggsave("some_taxa_trans.png", plot = last_plot())
